export const JestCliOptions = {
  all: {},
  automock: {},
  bail: {
    alias: 'b',
  },
  browser: {},
  cache: {},
  cacheDirectory: {},
  changedFilesWithAncestor: {},
  changedSince: {},
  ci: {},
  clearCache: {},
  clearMocks: {},
  collectCoverage: {},
  collectCoverageFrom: {},
  collectCoverageOnlyFrom: {},
  color: {},
  colors: {},
  config: {
    alias: 'c',
  },
  coverage: {},
  coverageDirectory: {},
  coveragePathIgnorePatterns: {},
  coverageProvider: {},
  coverageReporters: {},
  coverageThreshold: {},
  debug: {},
  detectLeaks: {},
  detectOpenHandles: {},
  env: {},
  errorOnDeprecated: {},
  expand: {
    alias: 'e',
  },
  filter: {},
  findRelatedTests: {},
  forceExit: {},
  globalSetup: {},
  globalTeardown: {},
  globals: {},
  haste: {},
  init: {},
  injectGlobals: {},
  json: {},
  lastCommit: {},
  listTests: {},
  logHeapUsage: {},
  maxConcurrency: {},
  maxWorkers: {
    alias: 'w',
  },
  moduleDirectories: {},
  moduleFileExtensions: {},
  moduleNameMapper: {},
  modulePathIgnorePatterns: {},
  modulePaths: {},
  noStackTrace: {},
  notify: {},
  notifyMode: {},
  onlyChanged: {
    alias: 'o',
  },
  onlyFailures: {
    alias: 'f',
  },
  outputFile: {},
  passWithNoTests: {},
  preset: {},
  prettierPath: {},
  projects: {},
  reporters: {},
  resetMocks: {},
  resetModules: {},
  resolver: {},
  restoreMocks: {},
  rootDir: {},
  roots: {},
  runInBand: {
    alias: 'i',
  },
  runTestsByPath: {},
  runner: {},
  selectProjects: {},
  setupFiles: {},
  setupFilesAfterEnv: {},
  showConfig: {},
  silent: {},
  skipFilter: {},
  snapshotSerializers: {},
  testEnvironment: {},
  testEnvironmentOptions: {},
  testFailureExitCode: {},
  testLocationInResults: {},
  testMatch: {},
  testNamePattern: {
    alias: 't',
  },
  testPathIgnorePatterns: {},
  testPathPattern: {},
  testRegex: {},
  testResultsProcessor: {},
  testRunner: {},
  testSequencer: {},
  testTimeout: {},
  testURL: {},
  timers: {},
  transform: {},
  transformIgnorePatterns: {},
  unmockedModulePathPatterns: {},
  updateSnapshot: {
    alias: 'u',
  },
  useStderr: {},
  verbose: {},
  version: {
    alias: 'v',
  },
  watch: {},
  watchAll: {},
  watchPathIgnorePatterns: {},
  watchman: {}
}
